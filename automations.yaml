#######################################################
# Scene controller triggers
#######################################################    

- id: sc_tap_hold
  alias: scene controller tap hold action
  trigger:
    platform: state
    entity_id: sensor.scene_controller_1_10
    to: "3"
  action:
    - service: script.turn_on
      data:
        entity_id: script.all_off
- id: sc_single_tap
  alias: scene controller single tap action
  trigger:
    platform: state
    entity_id: sensor.scene_controller_1_10
    to: "1"
  action:
    - service: scene.turn_on
      data:
        entity_id:
        - scene.table_on
        #- scene.living_on
    - service: script.turn_on
      data:
        entity_id: 
        - script.lights_on_sunset
        - script.blind_scene_at_time
- id: sc_double_tap
  alias: scene controller double tap option
  trigger:
    platform: state
    entity_id: sensor.scene_controller_1_10
    to: "2"
  action:
    - service: scene.turn_on
      data:
        entity_id:
        - scene.table_full_on
#######################################################
# Light automations
#######################################################            
- id: living_sunset
  alias: lights on at sunset if living lights are on
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: state
    entity_id: group.dining
    state: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: 
        - script.living_default_on
        - script.bar_on
- id: all_off_but_table
  alias: all lights except table lights off at sunrise
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: light.turn_off
      data:
        entity_id:
        - group.bar
        - group.living
# - alias: Set stalamp when triggered on
#   trigger:
#     platform: state
#     entity_id: light.hoeklamp
#     from: 'off'
#     to: 'on'
#   action:
#     service: scene.turn_on
#     entity_id: scene.hoeklamp_on
#######################################################
# Notifications
#######################################################    
# - id: notify_1
#   alias: notify if light switches on or off depending on away state.
#   trigger:
#     platform: event
#     event_type: call_service
#     event_data:
#       domain: light
#   condition:
#     condition: state
#     entity_id: input_boolean.away
#     state: 'on'
#   action:
#     - delay: 00:00:02
#     - service: notify.notify
#       data:
#         message: A light is switched on or off
- id: notify_2
  alias: notify when away mode changes.
  trigger:
    platform: state
    entity_id: input_boolean.away
  action:
    service: telegram_bot.send_message
    data_template:
      message: 'Away mode changed to {{ trigger.to_state.state }}.'
      inline_keyboard:
        - "Away on:/awayon, Away off:/awayoff"
    # data_template:
    #   message: >
    #     Away mode changed to {{ trigger.to_state.state }}
# - alias: notify when sander leaves.
#   trigger:
#     platform: state
#     entity_id: device_tracker.c0eefbd3c35f
#     from: 'home'
#     to: 'not_home'
#   action:
#     service: notify.notify
#     data:
#       message: Sander has left.
- id: notify_3
  alias: notify when all have left.
  trigger:
    - platform: state
      entity_id: device_tracker.c0eefbd3c35f
      from: 'home'
      to: 'not_home'
    - platform: state
      entity_id: device_tracker.c0eefbf28296
      from: 'home'
      to: 'not_home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.c0eefbd3c35f
        state: 'not_home'
      - condition: state
        entity_id: device_tracker.c0eefbf28296
        state: 'not_home'
  action:
    service: telegram_bot.send_message
    data_template:
      message: 'Nobody home. Activate away mode?'
      inline_keyboard:
        - "Yes:/awayon"
- id: away_off
  alias : away mode off when someone comes home
  trigger:
    - platform: state
      entity_id: device_tracker.c0eefbd3c35f
      from: 'not_home'
      to: 'home'
    - platform: state
      entity_id: device_tracker.c0eefbf28296
      from: 'not_home'
      to: 'home'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.away
      
#######################################################
# Shades
#######################################################
- id: shade_1
  alias: activate blind at sunrise but after 8AM
  trigger:
    - platform: sun
      event: sunrise
    - platform: time
      at: '8:01:00'
  condition:
    condition: time
    after: '8:00:00'
  action:
    service: scene.turn_on
    data:
      entity_id: scene.64040
- id: shade_2
  alias: put the shade in privacy mode at a certain time
  trigger:
    - platform: time
      at: '20:00:00'
    - platform: sun
      event: sunset
      offset: '-1:00:00'
  condition:
    condition: sun
    before: sunset
    before_offset: '1:00:00'
  action:
    service: scene.turn_on
    data:
      entity_id: scene.34037
- id: id_shade_3
  alias: Put the shade in night mode when completely dark
  trigger:
    - platform: sun
      event: sunset
      offset: '1:00:00'
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.53808
    - condition: state
      entity_id: binary_sensor.window__door_contact
      state: 'off'
    - serivce: scene.turn_on
      data:
        entity_id: scene.49867

#######################################################
# Away modes
#######################################################
- id: id_away_1
  alias: lights on at timeschedule
  trigger:
    - platform: sun
      event: sunset
    - platform: time
      at: '20:30'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away
        state: 'on'
      - condition: time
        before: '21:00:00'
  action:
    - service: scene.turn_on
      data:
        entity_id:
        - scene.table_on
- id: id_away_2
  alias: shade down at timeschedule
  trigger:
    - platform: time
      at: '21:50'
  condition:
    condition: state
    entity_id: input_boolean.away
    state: 'on'
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.49867
- id: id_away_3
  alias: all lights off at timeschedule
  trigger:
    - platform: time
      at: '22:15'
  condition:
    condition: state
    entity_id: input_boolean.away
    state: 'on'
  action:
    - service: script.turn_on
      data:
        entity_id: script.all_off
    

#######################################################
# bot events
#######################################################
# - alias: status of hass
#   trigger:
#     platform: event
#     event_type: telegram_command
#     event_data:
#       command: '/status'
#   action:
#     - service: telegram_bot.send_message
#       data_template:
#         title: '*Status update*'
#         message: Sun is {{ states('sun.sun') }}
- id: id_bot_1
  alias: bot away mode off command
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/awayoff'
  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.away
- id: id_bot2
  alias: bot away mode on command
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/awayon'
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.away
# switches on away mode from incoming telegram message.
- id: id_bot3
  alias: bot away set on
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/awayon'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Away on triggered"
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.away
- id: id_bot_4
  alias: bot away set off
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/awayoff'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: "Away off triggered"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.away

      # action:
      # - data:
      #     entity_id: scene.53808
      #   entity_id: scene.53808
      #   service: scene.turn_on
- id: id_morning_light_bo_1
  alias: activate on weekdays
  trigger:
    platform: time
    at: '6:30:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    service: script.turn_on
    data:
      entity_id: script.morning_light_bo
- id: id_morning_light_bo_2
  alias: activate on weekends
  trigger:
    platform: time
    at: '7:00:00'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: script.turn_on
    data:
      entity_id: script.morning_light_bo